server.port=8080
spring.application.name=gatewayserver
# The Gateway can be configured to create routes based on services registered with a DiscoveryClient compatible service registry.
spring.cloud.gateway.discovery.locator.enabled=false
# 忽略service name 大小写
spring.cloud.gateway.discovery.locator.lowerCaseServiceId=true
management.endpoint.gateway.enabled=true
# public redis
redis.host=localhost
redis.port=6379
redis.password=
# 连接超时时间（毫秒）
redis.timeout=10000
# dev环境用的是2 真是吊的不行,共享内存还要分,namespace都没.吐槽下
redis.database=10
# 连接池最大连接数（使用负值表示没有限制） 默认 8
redis.max-active=50
# 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
redis.max-wait=-1
# 连接池中的最大空闲连接 默认 8
redis.max-idle=5
# 连接池中的最小空闲连接 默认 0
redis.min-idle=0
# feign 是否启用 hystrix
feign.hystrix.enabled=true
# 资源隔离策略 SEMAPHORE
hystrix.command.default.execution.isolation.strategy=SEMAPHORE
hystrix.command.default.execution.isolation.semaphore.maxConcurrentRequests=2000
# hystrix 全局默认所有接口的超时时间是 10000 ms
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=10000
# fallback并发数
hystrix.command.default.fallback.isolation.semaphore.maxConcurrentRequests=200
# 是否开启缓存
hystrix.command.default.requestCache.enabled=false
# hystrix 默认请求的每个线程池大小
hystrix.threadpool.default.coreSize=300
# hystrix 线程池扩容最大值,需要允许扩容 hystrix.threadpool.default.allowMaximumSizeToDivergeFromCoreSize=true
hystrix.threadpool.default.maximumSize=500
# 是否允许扩容线程池
hystrix.threadpool.default.allowMaximumSizeToDivergeFromCoreSize=true
# 队列策略
hystrix.threadpool.default.maxQueueSize=1000
# management 配置 与 web配置隔离
# 允许访问所有路径
management.endpoints.web.exposure.include=*
# management 端口号 每个项目都固定
management.server.port=3${server.port}
# /gateway/globalfilters 查看golbal filters,/gateway/routes 查看routes
management.endpoints.web.base-path=/
# eureka
eureka.client.service-url.defaultZone=http://localhost:4040/eureka/
#限流配置
# 平均1分钟cpu限流策略是否开启
system.load.average.1m.ratelimiter.enable=false
# 平均1分钟负载阈值,超过后拒绝服务
system.load.average.1m.ratelimiter.overload=6
ip.ratelimiter.enable=true
# 1秒产生50个令牌
ip.ratelimiter.replenish.rate=2
# 总共保存2000个令牌
ip.ratelimiter.burst.capacity=16
qps.ratelimiter.enable=true
# 请求限流
qps.ratelimiter.replenish.rate=500
qps.ratelimiter.burst.capacity=100000
# 路由mapping
#/v1/supports
route.api.uri.mappings.supports={"id":"supports","path":"/**/supports/**","uri":"https://api-test.d.ahaschool.com/**","context_path":"/v1"}
route.api.uri.mappings.account={"id":"account","path":"/**/account/**","uri":"lb://accountserver/**","context_path":"/aha-account"}
route.api.uri.mappings.orders={"id":"orders","path":"/**/orders/**","uri":"lb://orderserver/**","context_path":"/hjm_order_war"}
route.api.uri.mappings.products={"id":"products","path":"/**/products/**","uri":"lb://orderserver/**","context_path":"/hjm_order_war"}
route.api.uri.mappings.yanxuan={"id":"yanxuan","path":"/**/yanxuan/**","uri":"lb://orderserver/**","context_path":"/hjm_order_war"}
#route.api.uri.mappings.publicyanxuan = {"id":"yanxuan","path":"/**/public/yanxuan/**","uri":"lb://orderserver/**","context_path":"/hjm_order_war","replenish_rate":1,"burst_capacity" : 5}
#route.api.uri.mappings.recommends = {"id":"recommends","path":"/**/recommends/**","uri":"lb://orderserver/**","context_path":"/hjm_order_war","replenish_rate":1,"burst_capacity" : 5}
#route.api.uri.mappings.users = {"id":"recommends","path":"/**/recommends/**","uri":"lb://userserver/**","context_path":"/userserver","replenish_rate":1,"burst_capacity" : 5}
#route.api.uri.mappings.live = {"id":"live","path":"/**/live/**","uri":"lb://liveserver/**","context_path":"/liveserver","replenish_rate":1,"burst_capacity" : 5}
#route.api.uri.mappings.formapply = {"id":"formapply","path":"/**/formapply/**","uri":"lb://withdrawserver/**","context_path":"/withdrawserver","replenish_rate":1,"burst_capacity" : 5}
#route.api.uri.mappings.apply = {"id":"apply","path":"/**/apply/**","uri":"lb://withdrawserver/**","context_path":"/withdrawserver","replenish_rate":1,"burst_capacity" : 5}
#route.api.uri.mappings.shipinfo = {"id":"shipinfo","path":"/**/shipinfo/**","uri":"lb://distributionserver/**","context_path":"/distributionserver","replenish_rate":1,"burst_capacity" : 5}
#route.api.uri.mappings.market = {"id":"market","path":"/**/market/**","uri":"lb://distributionserver/**","context_path":"/distributionserver","replenish_rate":1,"burst_capacity" : 5}
#route.api.uri.mappings.operation = {"id":"shipinfo","path":"/**/shipinfo/**","uri":"lb://distributionserver/**","context_path":"/distributionserver","replenish_rate":1,"burst_capacity" : 5}
#route.api.uri.mappings.taskstudy = {"id":"shipinfo","path":"/**/shipinfo/**","uri":"lb://distributionserver/**","context_path":"/distributionserver","replenish_rate":1,"burst_capacity" : 5}
# whitelist 白名单 接口
route.api.whitelist.mappings.bag=bag/course/list/get
route.api.whitelist.mappings.account=account/logs
route.api.whitelist.mappings.orders=*
route.api.whitelist.mappings.products=products/share,products/yanxuan/get,products/form/get,products/supreme/get,products/xkl/get
route.api.whitelist.mappings.yanxuan=*
route.api.whitelist.mappings.recommends=*
route.api.whitelist.mappings.users=user/sharelink/get
route.api.whitelist.mappings.live=app/config/get,app/home/get,app/learning/get,smallvideo/all,courses/all,subject/courses/all
route.api.whitelist.mappings.formapply=*
route.api.whitelist.mappings.apply=*
route.api.whitelist.mappings.market=market/betting/status/get,market/betting/course/all,market/wexinqrcodes/all,market/headranking/all,market/lottery/script/update,market/lottery/cache/get,market/betting/course/all,market/tp/coupon/create
route.api.whitelist.mappings.operation=operation/banner/all,operation/subject/group/all,operation/subject/get,operation/pack/all,operation/pack/get,operation/pack/config/get
route.api.whitelist.mappings.taskstudy=taskstudy/mission/knowledge/all,taskstudy/mission/knowledge/get,taskstudy/plan/work/get,taskstudy/thirdwork/create
